{"ast":null,"code":"var _jsxFileName = \"/Users/bryankohler/5914/MUFinal/RecipeSesameMockUp/src/components/HomeScreen/RecommendedContainer/RecommendedContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport RecommendedRecipe from '../RecommendedRecipe/RecommendedRecipe';\nimport './RecommendedContainer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecommendedContainer = props => {\n  _s();\n\n  const [currentRecipes, setCurrentRecipes] = useState(props.first);\n  useEffect(() => {\n    if (props.numberOfMessagesSent === 0) {\n      setCurrentRecipes(props.first);\n    } else if (props.numberOfMessagesSent === 1) {\n      setCurrentRecipes(props.second);\n    } else if (props.numberOfMessagesSent === 2) {\n      setCurrentRecipes(props.third);\n    }\n  }, [props.first, props.second, props.third, props.numberOfMessagesSent]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recommendedContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Suggested Recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommendedScroll\",\n      children: currentRecipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(RecommendedRecipe, {\n        name: recipe.name,\n        setRecipeScreenIsOpen: props.setRecipeScreenIsOpen,\n        setOpenRecipe: props.setOpenRecipe\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RecommendedContainer, \"xYWSaERv3ucoq/D2u4Sz03Adg1Q=\");\n\n_c = RecommendedContainer;\nexport default RecommendedContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecommendedContainer\");","map":{"version":3,"sources":["/Users/bryankohler/5914/MUFinal/RecipeSesameMockUp/src/components/HomeScreen/RecommendedContainer/RecommendedContainer.js"],"names":["React","useState","useEffect","RecommendedRecipe","RecommendedContainer","props","currentRecipes","setCurrentRecipes","first","numberOfMessagesSent","second","third","map","recipe","index","name","setRecipeScreenIsOpen","setOpenRecipe"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,OAAO,4BAAP;;;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AACpC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAACI,KAAK,CAACG,KAAP,CAApD;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIG,KAAK,CAACI,oBAAN,KAA+B,CAAnC,EAAsC;AAClCF,MAAAA,iBAAiB,CAACF,KAAK,CAACG,KAAP,CAAjB;AACH,KAFD,MAEO,IAAIH,KAAK,CAACI,oBAAN,KAA+B,CAAnC,EAAsC;AACzCF,MAAAA,iBAAiB,CAACF,KAAK,CAACK,MAAP,CAAjB;AACH,KAFM,MAEA,IAAIL,KAAK,CAACI,oBAAN,KAA+B,CAAnC,EAAsC;AACzCF,MAAAA,iBAAiB,CAACF,KAAK,CAACM,KAAP,CAAjB;AACH;AACJ,GARQ,EAQN,CAACN,KAAK,CAACG,KAAP,EAAcH,KAAK,CAACK,MAApB,EAA4BL,KAAK,CAACM,KAAlC,EAAyCN,KAAK,CAACI,oBAA/C,CARM,CAAT;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACMH,cAAc,CAACM,GAAf,CAAmB,CAACC,MAAD,EAASC,KAAT,kBACjB,QAAC,iBAAD;AAEI,QAAA,IAAI,EAAED,MAAM,CAACE,IAFjB;AAGI,QAAA,qBAAqB,EAAEV,KAAK,CAACW,qBAHjC;AAII,QAAA,aAAa,EAAEX,KAAK,CAACY;AAJzB,SACSH,KADT;AAAA;AAAA;AAAA;AAAA,cADF;AADN;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA7BD;;GAAMV,oB;;KAAAA,oB;AA+BN,eAAeA,oBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport RecommendedRecipe from '../RecommendedRecipe/RecommendedRecipe';\nimport './RecommendedContainer.css';\n\nconst RecommendedContainer = (props) => {\n    const [currentRecipes, setCurrentRecipes] = useState(props.first);\n\n    useEffect(() => {\n        if (props.numberOfMessagesSent === 0) {\n            setCurrentRecipes(props.first);\n        } else if (props.numberOfMessagesSent === 1) {\n            setCurrentRecipes(props.second);\n        } else if (props.numberOfMessagesSent === 2) {\n            setCurrentRecipes(props.third);\n        }\n    }, [props.first, props.second, props.third, props.numberOfMessagesSent]);\n\n    return (\n        <div className=\"recommendedContainer\">\n            <h2>Suggested Recipes</h2>\n            <div className=\"recommendedScroll\">\n                { currentRecipes.map((recipe, index) => (\n                    <RecommendedRecipe \n                        key={index} \n                        name={recipe.name} \n                        setRecipeScreenIsOpen={props.setRecipeScreenIsOpen} \n                        setOpenRecipe={props.setOpenRecipe}\n                    />\n                )) }\n            </div>\n        </div>\n    );\n\n}\n\nexport default RecommendedContainer;"]},"metadata":{},"sourceType":"module"}