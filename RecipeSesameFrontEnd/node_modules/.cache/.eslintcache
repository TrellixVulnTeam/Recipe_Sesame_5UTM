[{"/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/index.js":"1","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/reportWebVitals.js":"2","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/App.js":"3","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/HomeScreen/Chatbox/Chatbox.js":"4","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/HomeScreen/CartButton/CartButton.js":"5","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/HomeScreen/RecommendedContainer/RecommendedContainer.js":"6","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/HomeScreen/Logo/Logo.js":"7","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/CartScreen/CartContainer/CartContainer.js":"8","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/RecipeScreen/RecipeContainer/RecipeContainer.js":"9","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/HomeScreen/ChatTextEntry/ChatTextEntry.js":"10","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/HomeScreen/MessageContainer/MessageContainer.js":"11","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/CartScreen/CartContents/CartContents.js":"12","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/HomeScreen/RecommendedRecipe/RecommendedRecipe.js":"13","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/CartScreen/CartHeader/CartHeader.js":"14","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/RecipeScreen/RecipeDescription/RecipeDescription.js":"15","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/RecipeScreen/RecipeHeader/RecipeHeader.js":"16","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/RecipeScreen/RecipeControls/RecipeControls.js":"17","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/HomeScreen/Message/Message.js":"18","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/CartScreen/CartItem/CartItem.js":"19","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/CartScreen/ListSelector/ListSelector.js":"20","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/RecipeScreen/RecipeCartContainer/RecipeCartContainer.js":"21","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/RecipeScreen/RecipeButton/RecipeButton.js":"22","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/RecipeScreen/RecipeCartContents/RecipeCartContents.js":"23","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/RecipeScreen/RecipeButtons/RecipeButtons.js":"24","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/RecipeScreen/AddIngredientsButton/AddIngredientsButton.js":"25","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/CartScreen/QuantityAdjuster/QuantityAdjuster.js":"26"},{"size":554,"mtime":1646791731203,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1646791731204,"results":"29","hashOfConfig":"28"},{"size":3568,"mtime":1647385094920,"results":"30","hashOfConfig":"28"},{"size":1542,"mtime":1647573126495,"results":"31","hashOfConfig":"28"},{"size":500,"mtime":1647136425948,"results":"32","hashOfConfig":"28"},{"size":1257,"mtime":1648173657261,"results":"33","hashOfConfig":"28"},{"size":195,"mtime":1646791731197,"results":"34","hashOfConfig":"28"},{"size":1843,"mtime":1647127328740,"results":"35","hashOfConfig":"28"},{"size":1676,"mtime":1647385078250,"results":"36","hashOfConfig":"28"},{"size":6854,"mtime":1648189086127,"results":"37","hashOfConfig":"28"},{"size":709,"mtime":1647662837490,"results":"38","hashOfConfig":"28"},{"size":2578,"mtime":1647149056280,"results":"39","hashOfConfig":"28"},{"size":630,"mtime":1647065820296,"results":"40","hashOfConfig":"28"},{"size":526,"mtime":1647118555326,"results":"41","hashOfConfig":"28"},{"size":524,"mtime":1647029355006,"results":"42","hashOfConfig":"28"},{"size":451,"mtime":1647119611018,"results":"43","hashOfConfig":"28"},{"size":1348,"mtime":1647655034383,"results":"44","hashOfConfig":"28"},{"size":354,"mtime":1647300366119,"results":"45","hashOfConfig":"28"},{"size":5752,"mtime":1648187402546,"results":"46","hashOfConfig":"28"},{"size":797,"mtime":1647127496696,"results":"47","hashOfConfig":"28"},{"size":366,"mtime":1647140154003,"results":"48","hashOfConfig":"28"},{"size":2511,"mtime":1647143223467,"results":"49","hashOfConfig":"28"},{"size":484,"mtime":1646791731200,"results":"50","hashOfConfig":"28"},{"size":2004,"mtime":1647305358680,"results":"51","hashOfConfig":"28"},{"size":3279,"mtime":1647580646392,"results":"52","hashOfConfig":"28"},{"size":3552,"mtime":1648188459834,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"asluhd",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"56"},"/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/index.js",[],["114","115"],"/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/reportWebVitals.js",[],"/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/App.js",[],"/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/HomeScreen/Chatbox/Chatbox.js",[],"/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/HomeScreen/CartButton/CartButton.js",[],"/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/HomeScreen/RecommendedContainer/RecommendedContainer.js",[],"/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/HomeScreen/Logo/Logo.js",[],"/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/CartScreen/CartContainer/CartContainer.js",[],"/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/RecipeScreen/RecipeContainer/RecipeContainer.js",["116"],"import React, { useState } from \"react\";\nimport RecipeDescription from \"../RecipeDescription/RecipeDescription\";\nimport RecipeHeader from \"../RecipeHeader/RecipeHeader\";\nimport RecipeControls from \"../RecipeControls/RecipeControls\";\nimport RecipeButtons from \"../RecipeButtons/RecipeButtons\";\nimport './RecipeContainer.css';\n\nconst RecipeContainer = (props) => {\n    const [recipeSaved, setRecipeSaved] = useState(props.savedRecipes.includes(props.openRecipe));\n\n    const closeRecipeScreen = () => {\n        props.setRecipeScreenIsOpen(false);\n    }\n\n    return (\n        <div className=\"recipeContainer\">\n            <div className=\"recipeMain\">\n                <div className=\"shade\" onClick={closeRecipeScreen}></div>\n                <div className=\"screenCard recipeCard\">\n                    <RecipeHeader recipeName={props.openRecipe.Title} closeRecipeScreen={closeRecipeScreen}/>\n                    <div className=\"recipeContent\">\n                        <RecipeDescription recipe={props.openRecipe} />\n                        <RecipeControls \n                            setRecipeSaved={setRecipeSaved}\n                            recipe={props.openRecipe}\n                            recipeSaved={recipeSaved}\n                            savedRecipes={props.savedRecipes}\n                            setSavedRecipes={props.setSavedRecipes}\n                            savedIngredients={props.savedIngredients}\n                            setSavedIngredients={props.setSavedIngredients}\n                        />\n                    </div>\n                     \n                </div>\n            </div>\n        </div>\n    );\n    \n}\n\nexport default RecipeContainer;","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/HomeScreen/ChatTextEntry/ChatTextEntry.js",["117"],"import React, { useState } from 'react';\nimport './ChatTextEntry.css';\n\nconst ChatTextEntry = (props) => {\n    const [textContent, setTextContent] = useState('');\n    const [keywords, setKeywords] = useState([]);\n    const [negKeywords, setNegKeywords] = useState([]);\n    const [isWaiting, setIsWaiting] = useState(false);\n    const [prevRecipes, setPrevRecipes] = useState([]);\n    \n    const randomUrl = 'http://localhost:8000/random/';\n    const messageUrl = 'http://localhost:8000/message/';\n    const rasa_url = 'http://localhost:5005/webhooks/rest/webhook'\n\n    const handleTextChange = (event) => {\n        setTextContent(event.target.value);\n    }\n\n    const handleResetMessage = () => {\n        setIsWaiting(false);\n        setKeywords([]);\n        setNegKeywords([]);\n        fetch(randomUrl)\n            .then(response => response.json())\n            .then(data => props.setRecommendedRecipes(data));\n            const random = Math.random();\n\n            if (random < 0.33) {\n                props.addMessage({ content: \"Your search is cleared. What would you like to look for?\", isUserMessage: false });\n            } else if (random < 0.66) {\n                props.addMessage({ content: \"Starting from scratch. What kinds of recipes would you like?\", isUserMessage: false });\n            } else {\n                props.addMessage({ content: \"Ok, starting over. Tell me what you're looking for.\", isUserMessage: false });\n            }\n\n            props.removeTypingMessages();\n    }\n\n    const isResetMessage = (message) => {\n        return (message.toLowerCase().search('search') > -1 || \n                message.toLowerCase().search('restart') > -1 ||\n                message.toLowerCase().search('reset') > -1);\n    }\n\n    const recipesAreEqual = (recA, recB) => {\n        if (recA.Title !== recB.Title) return false;\n        if (recA.Cleaned_Ingredients !== recB.Cleaned_Ingredients) return false;\n        if (recA.Instructions !== recB.Instructions) return false;\n        return true;\n    }\n\n    const resultsAreUnchanged = (newRecipes) => {\n        console.log(newRecipes);\n        if (newRecipes.length !== prevRecipes.length) return false;\n        \n        for (let i = 0; i < newRecipes.length; i++) {\n            if (!recipesAreEqual(newRecipes[i], prevRecipes[i])) return false;\n        }\n\n        return true;\n    }\n\n    const handleShowMore = () => {\n        let thereWasMore = false;\n        const originalIndex = props.resultStartingIndex;\n        const newIndex = props.resultStartingIndex + 6 >= props.recommendedRecipes.length ? 0 : props.resultStartingIndex + 6;\n        setIsWaiting(false);\n        props.setResultStartingIndex(props.resultStartingIndex + 6 >= props.recommendedRecipes.length ? 0 : props.resultStartingIndex + 6);\n        \n        if (originalIndex === newIndex) {\n            props.addMessage({ content: \"There aren't anymore recipes.\", isUserMessage: false })\n        } else {\n            const random = Math.random();\n            if (random < 0.33) {\n                props.addMessage({ content: \"Here's some other recipes.\", isUserMessage: false });\n            } else if (random < 0.66) {\n                props.addMessage({ content: \"Ok, here's more recipes from your search.\", isUserMessage: false });\n            } else {\n                props.addMessage({ content: \"You might like these recipes.\", isUserMessage: false });\n            }\n        }\n        props.removeTypingMessages();\n    }\n\n    const handleSearchMessage = () => {\n        let numberOfResults = 0;\n        props.setResultStartingIndex(0);\n\n        fetch(messageUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({'sender': \"test\", 'message': textContent, 'keywords': keywords, 'negKeywords': negKeywords})\n        })\n            .then(response => response.json())\n            .then(data => {\n                const parsedData = JSON.parse(data);\n                if (parsedData.recipes.length < 1) {\n                    setIsWaiting(false);\n                    props.removeTypingMessages();\n                }\n                props.setRecommendedRecipes(parsedData.recipes);\n                setKeywords(parsedData.keywords);\n                setNegKeywords(parsedData.negKeywords);\n\n                /* \n                 *  If results haven't changed, set number of results to negative\n                 *  so we display the correct response in the following .then\n                 */\n                if (resultsAreUnchanged(parsedData.recipes)) numberOfResults = -1;\n                else numberOfResults = parsedData.recipes.length;\n\n                setPrevRecipes(parsedData.recipes);\n            })\n            .then(() => {\n                if (numberOfResults < 1) {\n                    // Handle no new results on front end to avoid back end complication\n                    props.addMessage({ content: \"Sorry, we couldn't find any recipes that are a good fit.\", isUserMessage: false })\n                    props.removeTypingMessages();\n                } else {\n                    fetch(rasa_url, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify({'sender': \"default\", 'message': textContent.toLowerCase()})\n                    })\n                        .then(response => response.json())\n                        .then(data => {    \n                            setIsWaiting(false); \n                            data.forEach((x, i) => props.addMessage({ content: data[i].text, isUserMessage: false }));\n                            props.removeTypingMessages();\n                            props.incrementNumberOfMessagesSent();\n                        });\n                }\n            });\n    }\n\n    const handleMessageSend = (event) => {\n        event.preventDefault();\n\n        if (textContent.length > 0) {\n            props.addMessage({ content: textContent, isUserMessage: true });\n\n            if (!isWaiting) props.addMessage({ content: '...', isUserMessage: false});\n            setIsWaiting(true);\n            \n            if (isResetMessage(textContent)) handleResetMessage();\n            else if (textContent.toLowerCase().search('show me more') > -1) handleShowMore();\n            else handleSearchMessage();\n\n            setTextContent('');\n        }\n    }\n\n    return (\n        <div>\n            <form className=\"chatTextEntry\" onSubmit={handleMessageSend}>\n                <input className=\"input\" type=\"text\" placeholder=\"Enter text.\" onChange={handleTextChange} value={textContent}></input>\n                <input className=\"send\" type=\"submit\" value=\"Send\"></input>\n            </form>\n        </div>\n    );\n}\n\nexport default ChatTextEntry;","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/HomeScreen/MessageContainer/MessageContainer.js",["118"],"import React, { useState } from 'react';\nimport Message from '../Message/Message';\nimport './MessageContainer.css';\n\nconst MessageContainer = (props) => {\n    return (\n        <div className=\"messageContainer\">\n            { props.messages.slice(0).reverse().map((message, index) => (\n                (message.isUserMessage) ? (\n                    <Message key={index} content={message.content} isUserMessage={message.isUserMessage} />\n                ) : (\n                    <Message key={index} content={message.content.charAt(0).toUpperCase() + message.content.slice(1)} isUserMessage={message.isUserMessage} />\n                )\n            ))}\n        </div>\n    );\n}\n\nexport default MessageContainer;","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/CartScreen/CartContents/CartContents.js",["119","120","121"],"import React, { useState } from \"react\";\r\nimport CartItem from \"../CartItem/CartItem\";\r\nimport ListSelector from \"../ListSelector/ListSelector\";\r\nimport './CartContents.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPrint } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst CartContents = (props) => {\r\n    //<div className=\"printButton\">\r\n    //<FontAwesomeIcon icon={faPrint} size=\"1x\"/>\r\n    //</div>\r\n    return (\r\n        <div className=\"cartContents\">\r\n            <ListSelector \r\n                displayIngredients={props.displayIngredients}\r\n                setDisplayIngredients={props.setDisplayIngredients}\r\n            />\r\n            \r\n            {props.displayIngredients ? (\r\n                props.savedIngredients && props.savedIngredients.length > 0 ? (\r\n                    <div className=\"cartList\">\r\n                        {props.savedIngredients.map((item, index) => (\r\n                            <CartItem \r\n                                key={index} \r\n                                item={item} \r\n                                savedIngredients={props.savedIngredients}\r\n                                setSavedIngredients={props.setSavedIngredients}\r\n                                itemType=\"ingredient\"\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"cartList empty\">\r\n                        <p>You don't have any ingredients in your basket.</p>\r\n                    </div>\r\n                )\r\n            ) : (\r\n                props.savedRecipes && props.savedRecipes.length > 0 ? (\r\n                    <div className=\"cartList allRadius\">\r\n                        {props.savedRecipes.map((item, index) => (\r\n                            <CartItem key={index} \r\n                                item={item} \r\n                                setOpenRecipe={props.setOpenRecipe} \r\n                                setRecipeScreenIsOpen={props.setRecipeScreenIsOpen}\r\n                                savedRecipes={props.savedRecipes}\r\n                                setSavedRecipes={props.setSavedRecipes}\r\n                                itemType=\"recipe\"\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"cartList empty\">\r\n                        <p>You haven't saved any recipes.</p>\r\n                    </div>\r\n                )\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CartContents;","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/HomeScreen/RecommendedRecipe/RecommendedRecipe.js",["122"],"import React from 'react';\nimport './RecommendedRecipe.css';\n\nconst RecommendedRecipe = (props) => {\n    const handleRecipeClick = () => {\n        props.setOpenRecipe(props.recipe);\n        console.log(props.recipe.Cleaned_Ingredients.replace(/\"/g, ' inch').replace(/'/g, '\"'));\n        props.setRecipeScreenIsOpen(true);\n    }\n\n    return (\n        <div style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/images/\"  + props.recipe.Image_Name + \".jpg\" + \")\"}} className=\"recommendedRecipe\" onClick={handleRecipeClick}>\n            <h3>{props.recipe.Title}</h3>\n        </div>\n    );\n\n}\n\nexport default RecommendedRecipe;","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/CartScreen/CartHeader/CartHeader.js",[],"/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/RecipeScreen/RecipeDescription/RecipeDescription.js",[],"/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/RecipeScreen/RecipeHeader/RecipeHeader.js",[],"/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/RecipeScreen/RecipeControls/RecipeControls.js",["123"],"import React, { useState } from \"react\";\nimport RecipeButtons from \"../RecipeButtons/RecipeButtons\";\nimport RecipeCartContainer from \"../RecipeCartContainer/RecipeCartContainer\";\nimport './RecipeControls.css';\n\nconst RecipeControls = (props) => {\n    return (\n        <div className=\"recipeControls\">\n            <img src={process.env.PUBLIC_URL + \"/images/\"  + props.recipe.Image_Name + \".jpg\"} alt={props.recipe.Title} />\n            { JSON.parse(props.recipe.Cleaned_Ingredients.replace(/\"/g, ' inch').replace(/'/g, '\"')).map(line => <p className=\"mobileIngredient\">{line}</p>) }\n            <div className=\"mobileInstructions\">\n                { props.recipe.Instructions.split('\\n').map(line => <p className=\"recipeInstructions\">{line}</p>) }\n            </div>\n            <h2>Your Ingredients</h2>\n            <RecipeCartContainer savedIngredients={props.savedIngredients}/>\n            <RecipeButtons \n                setRecipeSaved={props.setRecipeSaved}\n                recipe={props.recipe}\n                recipeSaved={props.recipeSaved}\n                savedRecipes={props.savedRecipes}\n                setSavedRecipes={props.setSavedRecipes}\n                savedIngredients={props.savedIngredients}\n                setSavedIngredients={props.setSavedIngredients}\n            />\n        </div>\n    );\n}\n\nexport default RecipeControls;","/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/HomeScreen/Message/Message.js",[],"/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/CartScreen/CartItem/CartItem.js",[],"/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/CartScreen/ListSelector/ListSelector.js",[],"/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/RecipeScreen/RecipeCartContainer/RecipeCartContainer.js",[],"/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/RecipeScreen/RecipeButton/RecipeButton.js",[],"/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/RecipeScreen/RecipeCartContents/RecipeCartContents.js",[],"/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/RecipeScreen/RecipeButtons/RecipeButtons.js",[],"/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/RecipeScreen/AddIngredientsButton/AddIngredientsButton.js",[],"/Users/jessefowler/Documents/RecipeSesame/Recipe_Sesame/RecipeSesameFrontEnd/src/components/CartScreen/QuantityAdjuster/QuantityAdjuster.js",["124","125"],"import React, { useEffect, useState } from \"react\";\nimport { toVulgar } from 'vulgar-fractions';\nimport './QuantityAdjuster.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nconst QuantityAdjuster = (props) => {\n    const [quantity, setQuantity] = useState(props.initialQuantity);\n    const [startIndex, setStartIndex] = useState(props.startingIndex);\n    const [endIndex, setEndIndex] = useState(props.endingIndex);\n    const floatRegExp = new RegExp('^([0-9]+([.][0-9]*)?|[.][0-9]+)$');\n\n    useEffect(() => {\n        if (props.endingIndex !== -1) {\n            let currentIngredients = props.savedIngredients.slice();\n            let currentIng = props.ingredient;\n            let index = currentIngredients.indexOf(currentIng);\n            let result = \"\";\n\n            if (quantity === 0) result += 0;\n            else if (quantity >= 1) result += Math.floor(quantity);\n            if (typeof toVulgar(quantity % 1) !== 'undefined' && result.length === 0) result += toVulgar(quantity % 1);\n            else if (typeof toVulgar(quantity % 1) !== 'undefined') result += \" \" + toVulgar(quantity % 1);\n            else if (quantity % 1 > 0) result = parseInt(result) + quantity % 1;\n\n            const newIng = currentIng.substring(0, startIndex) + result + currentIng.substring(endIndex);\n            \n            setEndIndex(startIndex + result.length);\n            currentIngredients.splice(index, 1, newIng);\n            props.setSavedIngredients(currentIngredients);\n        }\n    }, [quantity]);\n\n    const handleQuantityChange = (event) => {\n        setQuantity(event.target.value);\n    }\n\n    const onQuantityBlur = (event) => {\n        if(!event.target.value.match(floatRegExp)) setQuantity(0);\n        //updateItem();\n    }\n\n    const roundToQuarter = (num) => {\n        return (Math.round(num * 4) / 4);\n    }\n\n    const incrementQuantity = () => {\n        const currentQuantity = Number(quantity);\n        let newQuantity = 0.0;\n\n        if (currentQuantity >= 5.0) {\n            newQuantity = currentQuantity + 1.0;\n        } else if (currentQuantity >= 1.0) {\n            newQuantity = currentQuantity + 0.5;\n        } else {\n            newQuantity = currentQuantity + 0.25;\n        }\n\n        setQuantity(roundToQuarter(newQuantity));\n        //updateItem();\n    }\n\n    const decrementQuantity = () => {\n        const currentQuantity = Number(quantity);\n        let newQuantity = 0.0;\n        if (currentQuantity > 5.0) {\n            newQuantity = currentQuantity - 1.0;\n        } else if (currentQuantity > 1.0) {\n            newQuantity = currentQuantity - 0.5;\n        } else {\n            newQuantity = currentQuantity - 0.25;\n        }\n        if (newQuantity < 0.0) setQuantity(0); // Catch any negatives\n        else setQuantity(roundToQuarter(newQuantity));\n        //updateItem();\n    }\n\n    return (\n        <div className=\"quantityAdjuster\">\n            <div className=\"servingsArrows quantityArrows\">\n                <FontAwesomeIcon icon={faAngleDown} onClick={decrementQuantity} size=\"lg\"/>\n                <div className=\"servings quantity\">\n                    <input className=\"input\" type=\"text\" onChange={handleQuantityChange} onBlur={onQuantityBlur} value={quantity}></input>\n                </div>\n                <FontAwesomeIcon icon={faAngleUp} onClick={incrementQuantity} size=\"lg\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default QuantityAdjuster;",{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":5,"column":8,"nodeType":"132","messageId":"133","endLine":5,"endColumn":21},{"ruleId":"130","severity":1,"message":"134","line":64,"column":13,"nodeType":"132","messageId":"133","endLine":64,"endColumn":25},{"ruleId":"130","severity":1,"message":"135","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"135","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"136","line":5,"column":10,"nodeType":"132","messageId":"133","endLine":5,"endColumn":25},{"ruleId":"130","severity":1,"message":"137","line":6,"column":10,"nodeType":"132","messageId":"133","endLine":6,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":12,"column":121,"nodeType":"140","messageId":"141","endLine":12,"endColumn":122},{"ruleId":"130","severity":1,"message":"135","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"142","line":10,"column":24,"nodeType":"132","messageId":"133","endLine":10,"endColumn":37},{"ruleId":"143","severity":1,"message":"144","line":33,"column":8,"nodeType":"145","endLine":33,"endColumn":18,"suggestions":"146"},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'RecipeButtons' is defined but never used.","Identifier","unusedVar","'thereWasMore' is assigned a value but never used.","'useState' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faPrint' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'setStartIndex' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'endIndex', 'props', and 'startIndex'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["149"],"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},"Update the dependencies array to be: [endIndex, props, quantity, startIndex]",{"range":"152","text":"153"},[1641,1651],"[endIndex, props, quantity, startIndex]"]